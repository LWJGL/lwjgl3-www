{
  "name": "lwjgl.org",
  "version": "1.5.0",
  "private": true,
  "license": "BSD-3-Clause",
  "description": "The website of LWJGL",
  "author": "Apostolos Tsakpinis <apostolos.tsakpinis@gmail.com>",
  "repository": {
    "type": "git",
    "url": "https://github.com/LWJGL/lwjgl3-www.git"
  },
  "bugs": {
    "url": "https://github.com/LWJGL/lwjgl3-www/issues"
  },
  "homepage": "https://github.com/LWJGL/lwjgl3-www#readme",
  "nodemonConfig": {
    "ext": "mjs,css",
    "watch": [
      "server/*"
    ]
  },
  "dependencies": {
    "@aws-sdk/client-s3": "3.28.0",
    "fastify": "3.20.2",
    "fastify-accepts": "2.0.1",
    "fastify-etag": "2.1.0",
    "fastify-healthcheck": "3.1.0",
    "fastify-helmet": "5.3.2",
    "fastify-static": "4.2.3",
    "point-of-view": "4.15.2",
    "pug": "3.0.2"
  },
  "devDependencies": {
    "@aws-sdk/client-cloudfront": "3.28.0",
    "@babel/core": "7.15.0",
    "@babel/preset-env": "7.15.0",
    "@babel/preset-react": "7.14.5",
    "@babel/preset-typescript": "7.15.0",
    "@pmmmwh/react-refresh-webpack-plugin": "0.5.0-rc.5",
    "@prettier/plugin-pug": "1.16.5",
    "@react-aria/button": "3.3.3",
    "@react-aria/dialog": "3.1.4",
    "@react-aria/focus": "3.4.1",
    "@react-aria/interactions": "3.5.1",
    "@react-aria/link": "3.1.4",
    "@react-aria/overlays": "3.7.2",
    "@react-aria/utils": "3.8.2",
    "@stitches/react": "1.0.0",
    "@types/lodash-es": "4.17.4",
    "@types/react-dom": "17.0.9",
    "@types/react-is": "17.0.2",
    "@types/scheduler": "0.16.2",
    "@types/web": "0.0.27",
    "@typescript-eslint/eslint-plugin": "4.29.3",
    "@typescript-eslint/parser": "4.29.3",
    "autoprefixer": "10.3.3",
    "babel-loader": "8.2.2",
    "chalk": "4.1.2",
    "cli-table": "0.3.6",
    "concurrently": "6.2.1",
    "core-js": "3.16.4",
    "css-loader": "6.2.0",
    "cssnano": "5.0.8",
    "eslint": "7.32.0",
    "eslint-plugin-react-hooks": "0.0.0-experimental-8723e772b-20210826",
    "fastify-http-proxy": "6.2.0",
    "framer-motion": "4.1.17",
    "gzip-size": "6.0.0",
    "history": "5.0.1",
    "immer": "9.0.6",
    "jszip": "3.7.1",
    "lodash-es": "4.17.21",
    "postcss": "8.3.6",
    "postcss-import": "14.0.2",
    "postcss-preset-env": "6.7.0",
    "postcss-scss": "4.0.0",
    "prettier": "2.3.2",
    "react": "0.0.0-experimental-8723e772b-20210826",
    "react-dom": "0.0.0-experimental-8723e772b-20210826",
    "react-error-boundary": "3.1.3",
    "react-fast-compare": "3.2.0",
    "react-is": "0.0.0-experimental-8723e772b-20210826",
    "react-refresh": "0.0.0-experimental-8723e772b-20210826",
    "reselect": "4.0.0",
    "rimraf": "3.0.2",
    "scroll-into-view-if-needed": "2.2.28",
    "shiki": "0.9.8",
    "source-map-loader": "3.0.0",
    "style-loader": "3.2.1",
    "tiny-async-pool": "1.2.0",
    "typescript": "4.4.2",
    "use-context-selector": "1.3.7",
    "webpack": "5.51.1",
    "webpack-cli": "4.8.0",
    "webpack-dev-server": "4.0.0"
  },
  "scripts": {
    "styles:dev": "NODE_ENV=development node ./scripts/build-styles.mjs",
    "styles:prod": "NODE_ENV=production node ./scripts/build-styles.mjs",
    "bundler:dev": "WDS=1 webpack serve",
    "bundler:vendor": "NODE_ENV=development node ./scripts/vendor.mjs",
    "bundler:prod": "rimraf ./public/js/*.js && NODE_ENV=production node ./scripts/build-production.mjs",
    "bundler:post": "node ./scripts/post-production.mjs",
    "flush": "rimraf ./node_modules/.cache",
    "lint": "eslint --ext .ts,.js,.tsx client/",
    "server:dev": "NODE_ENV=development node server/index.mjs",
    "server:debug": "NODE_ENV=development node --inspect --preserve-symlinks server/index.mjs",
    "server:watch": "NODE_ENV=development npx nodemon server/index.mjs",
    "server:test": "NODE_ENV=production node server/index.mjs --test --s3proxy --nocache --pretty",
    "start": "concurrently \"npm run bundler:dev\" \"npm run server:watch\"",
    "release": "npm run styles:prod && npm run bundler:prod && npm run bundler:post",
    "prettier": "prettier --write \"{client,server,scripts}/**/*.{ts,tsx,js,mjs,md,css,pug}\"",
    "ncu": "npx npm-check-updates -i --configFileName ncu.json",
    "ncut": "npx npm-check-updates -t greatest --configFileName ncu.json",
    "ncun": "npx npm-check-updates -i -t newest --configFileName ncu-newest.json"
  }
}
